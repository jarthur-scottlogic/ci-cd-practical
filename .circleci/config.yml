version: 2.1

jobs:
  test:
    docker:
      - image: cimg/node:14.15.4
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - yarn-cached-packages-{{ checksum "yarn.lock" }}
      - run:
          name: install packages
          command: yarn install --immutable
      - save_cache:
          key: yarn-cached-packages-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - run:
          name: Run tests with JUnit as reporter
          command: yarn test --ci --runInBand --reporters=default --reporters=jest-junit --coverage
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./reports/junit
      - run: yarn build
      - store_artifacts:
          path: ./build
      

  publish-github-release:
    docker:
      - image: circleci/golang:1.10
    steps:
      - attach_workspace:
          at: ./build
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./build/

  deploy_to_staging:
    docker:
      - image: cimg/node:14.15.4
    steps:
      - checkout
      - run: npm install
      - run: yarn build
      - run:
          name: Deploy to Staging
          command: npx surge ./build/ https://james-arthur-staging.surge.sh
  
  test_staging:
    docker:
      - image: cimg/node-14.16.1-browsers
    steps:
      - run: yarn add --dev --exact puppeteer jest-junit cross-env
      - run: cross-env JEST_JUNIT_OUTPUT=\"./test-results/acceptance/results.xml\" cross-env BASE_URL=\"'https://james-arthur-staging.surge.sh'\" jest -c e2e/jestConfig.json --runInBand
    

  
workflows:
  orb-free-workflow:
    jobs:
      - test
      - publish-github-release
      - deploy_to_staging:
          filters:
            branches:
              only: master
